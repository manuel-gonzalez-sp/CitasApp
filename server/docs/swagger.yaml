definitions:
  dto.CreateUserDTO:
    properties:
      birthDate:
        type: string
      city:
        type: string
      country:
        type: string
      fullname:
        type: string
      gender:
        type: string
      introduction:
        type: string
      lookingFor:
        type: string
      username:
        type: string
    required:
    - fullname
    - username
    type: object
  dto.LogInDTO:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoggedInDTO:
    properties:
      birthDate:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        type: string
      introduction:
        type: string
      jwtToken:
        type: string
      lookingFor:
        type: string
      passwordHash:
        type: string
      username:
        type: string
    type: object
  dto.SignUpDTO:
    properties:
      birthDate:
        type: string
      city:
        type: string
      country:
        type: string
      fullname:
        type: string
      gender:
        type: string
      introduction:
        type: string
      lookingFor:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - fullname
    - password
    - username
    type: object
  dto.UpdateUserDTO:
    properties:
      birthDate:
        type: string
      city:
        type: string
      country:
        type: string
      fullname:
        type: string
      gender:
        type: string
      introduction:
        type: string
      lookingFor:
        type: string
    type: object
  dto.UserDTO:
    properties:
      birthDate:
        type: string
      city:
        type: string
      country:
        type: string
      createdAt:
        type: string
      fullname:
        type: string
      gender:
        type: string
      id:
        type: string
      introduction:
        type: string
      lookingFor:
        type: string
      username:
        type: string
    required:
    - fullname
    - id
    - username
    type: object
info:
  contact: {}
  description: This is a HTTP API for CitasApp.
  title: CitasApp API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Logs in a user with provided credentials.
      parameters:
      - description: Login Credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LogInDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/dto.LoggedInDTO'
      summary: User login
      tags:
      - Authentication
  /signup:
    post:
      consumes:
      - application/json
      description: Signs up a user with provided credentials.
      parameters:
      - description: Signup Credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Successful signup
          schema:
            $ref: '#/definitions/dto.LoggedInDTO'
      summary: User signup
      tags:
      - Authentication
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserDTO'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
    patch:
      consumes:
      - application/json
      parameters:
      - description: Update DTO
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
      security:
      - ApiKeyAuth: []
      summary: Update a new User
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User DTO
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
      security:
      - ApiKeyAuth: []
      summary: Create a new User
      tags:
      - Users
  /user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
      security:
      - ApiKeyAuth: []
      summary: Get a single User based on the provided ID
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
